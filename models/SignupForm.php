<?php
namespace app\models;
use app\models\User;
use app\models\UserProfil;
use yii\base\Model;
use Yii;
use yii\web\UploadedFile;
class SignupForm extends Model
{
    public $username;
    public $email;
    public $password;
    public $nip;
    public $nama;
    public $jabatan;
    public $photo;
    public  function rules()
    {
//        return parent::rules(); // TODO: Change the autogenerated stub
        return[
            ['username', 'filter','filter'=>'trim'],
            ['username', 'required'],
            ['username', 'unique', 'targetClass'=> 'app\models\User','message'=>'This username has already been taken '],
            ['username', 'string','min'=>2 , 'max'=> 255],

            ['email', 'filter','filter'=>'trim'],
            ['email', 'required'],
            ['email', 'email'],
            ['username', 'string','max'=> 255],
            ['username', 'unique', 'targetClass'=> 'app\models\User','message'=>'This email has already been taken '],

            ['password', 'required'],
            ['nama', 'required'],
            ['jabatan', 'required'],
            ['photo', 'required'],
            ['password', 'string', 'min'=>6],

            [['nip'], 'required'],
            [['nip', 'username'], 'string', 'max' => 50],
            [['nama', 'jabatan', 'photo'], 'string', 'max' => 255],
            [['photo'],'file','extensions'=>['png','jpg','jpeg','gif'],'maxSize'=>21000000]
        ];
    }

    public function signup()
    {

        if($this->validate())
        {
            $user= new User();
            $profil= new UserProfil();
            $user->username= $this->username;
            $user->email=$this->email;
            $user->setPassword($this->password);
            $user->generateAuthKey();
            $profil->username=$this->username;
            $profil->nama=$this->nama;
            $profil->nip=$this->nip;
            $profil->jabatan= $this->jabatan;
            $profil->photo= $this->photo;

//            if($user->save())
//            {
//                return $user;
//            }

            $transaction = Yii::$app->db->beginTransaction();

            try  {
                if ($user->save() && $profil->save()) {
                    $transaction->commit();
                    return true;
                } else {
                    $transaction->rollBack();
                }
            } catch (Exception $e) {
                $transaction->rollBack();
            }


        }
        return null;
    }

    public function getPhoto()
    {
//        Yii::$app->params['uploadPath'] =  Yii::$app->getUrlManager()->baseUrl.'/uploads/';
        Yii::$app->params['uploadPath'] =  Yii::getAlias('@webroot').'/';
//        $path = Yii::$app->params['uploadPath'] .$this->berkas;
        return isset($this->photo)? Yii::$app->params['uploadPath'].$this->photo: null;
    }

    public function uploadPhoto()
    {
        $image = UploadedFile::getInstance($this,'photo');

        // if no image was uploaded abort the upload
        if (empty($image)) {
            $this->photo=null;
            return false;
        }

        // store the source file name
        $this->photo = $image->name;
        $tmp = explode(".", $image->name);
        $ext = end($tmp);

//        $ext = $image->name;

        // generate a unique file name
        $this->photo = Yii::$app->security->generateRandomString().".{$ext}";

        // the uploaded image instance
        return $image;
    }


}



?>